---
title: "Data Cleaning DEAD"
format: html
editor: visual
jupyter: python3
---

## Imports
```{r}
# imports
library(tidyverse)
```

# Population Data

```{r}
# Read in Outside Data - Population
population <- read.csv(here::here("data/City_Population_in_Iowa_by_County_and_Year.csv"))
```

## Data Cleaning for Population
```{r}
# Clean Population Data - get population by county and year
population2 <- population |>
  select(County, City, Year, Estimate) |>
  mutate(DATE = as.Date(Year, format="%B %d %Y"),
         Year = year(DATE)) |>
  group_by(County, Year) |>
  summarize(Population = sum(Estimate)) |>
  filter(Year >= 2020)
```

```{r}
# Make new csv with cleaned data
write.csv(population2, here::here("data/Population_in_Iowa_Transformed.csv"))
```

# Feature Engeenering for DEAD

```{r}
# Read in DEAD data
client_b <- read.csv(here::here("../data/dead.csv"))
```

## Grouping Alcohol types together
```{r}
# Group alcohol types together
client_b2 <- client_b |>
  mutate(
    alcohol_type = case_when(
      str_detect(category_name, "WHISK") ~ "WHISKEY",
      str_detect(category_name, "VODKA") ~ "VODKA",
      str_detect(category_name, "RUM") ~ "RUM",
      str_detect(category_name, "TEQUILA") ~ "TEQUILA",
      str_detect(category_name, "SCHNAPPS") ~ "SCHNAPPS",
      str_detect(category_name, "GIN") ~ "GIN",
      str_detect(category_name, "BRANDIES") ~ "BRANDY",
      str_detect(category_name, "LIQUEURS") ~ "LIQUEUR",
      str_detect(category_name, "COCKTAIL") ~ "COCKTAILS",
      str_detect(category_name, "SCOTCH") ~ "SCOTCH",
      TRUE ~ NA
    )
  )
# Maker new csv with cleaned data
write.csv(client_b2, here::here("../data/dead_transformed.csv"))

```


# Combining Population and DEAD Data

```{python}
# imports
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# Group and aggregate columns for DEAD and Population

# Data
data = pd.read_csv("../data/dead_transformed.csv")
pop_data = pd.read_csv('../data/Population_in_Iowa_Transformed.csv')

# Preprocessing
data['county'] = data['county'].astype(str).str.strip().str.lower()
pop_data['County'] = pop_data['County'].astype(str).str.strip().str.lower()
data['date'] = pd.to_datetime(data['date'], errors='coerce')
data['date'] = data['date'].dt.strftime('%Y').astype(int)

# Grouping
pop_data = pop_data.groupby(['County', 'Year'], as_index=False)['Population'].mean()
combined_data =  pd.merge(data, pop_data, left_on = (['county', 'date']), right_on= (['County', 'Year']))
combined_data['Population'] = combined_data.groupby(['county', 'date'])['Population'].transform('mean')
grouped_data_dead = combined_data.groupby(['county', 'date','alcohol_type']).agg(
  sum_sale_dollars = ('sale_dollars', 'sum'),
  avg_sale_dollars = ('sale_dollars', 'mean'),
  population = ('Population', 'first')
)
# Write to final csv
grouped_data_dead.to_csv("../data/grouped_data_dead.csv", index=True)
```