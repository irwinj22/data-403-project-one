---
title: "Data Cleaning"
format: html
editor: visual
jupyter: python3
---

## Import 

```{r}
library(tidyverse)
```


# Pulling in population
```{r}
population <- read.csv(here::here("City_Population_in_Iowa_by_County_and_Year.csv"))
```
```{r}
population2 <- population |>
  select(County, City, Year, Estimate) |>
  mutate(DATE = as.Date(Year, format="%B %d %Y"),
         Year = year(DATE)) |>
  group_by(County, Year) |>
  summarize(Population = sum(Estimate)) |>
  filter(Year >= 2020)
```
```{r}
write.csv(population2, here::here("Population_in_Iowa_Transformed.csv"))
```

# Feature Engeenering for Client A

```{r}
client_a <- read.csv(here::here("client_a_booze_r_us (1).csv"))
```
```{r}
client_a2  <- client_a |>
  mutate(
    company = sub(" [0-9]+",
                  "",
                  sub("#.*",
                      "" ,
                      sub("/.*", "",name))),
    company = trimws(company, which="right")
  )

write.csv(client_a2, here::here("client_a_booze_r_us_transformed.csv"))
```

# Feature Engeenering for Client B

```{r}
client_b <- read.csv(here::here("client_b_dead (1).csv"))
```
```{r}
client_b2 <- client_b |>
  mutate(
    alcohol_type = case_when(
      str_detect(category_name, "WHISK") ~ "WHISKEY",
      str_detect(category_name, "VODKA") ~ "VODKA",
      str_detect(category_name, "RUM") ~ "RUM",
      str_detect(category_name, "TEQUILA") ~ "TEQUILA",
      str_detect(category_name, "SCHNAPPS") ~ "SCHNAPPS",
      str_detect(category_name, "GIN") ~ "GIN",
      str_detect(category_name, "BRANDIES") ~ "BRANDY",
      str_detect(category_name, "LIQUEURS") ~ "LIQUEUR",
      str_detect(category_name, "COCKTAIL") ~ "COCKTAILS",
      str_detect(category_name, "SCOTCH") ~ "SCOTCH",
      TRUE ~ NA
    )
  )

write.csv(client_b2, here::here("client_b_dead_transformed.csv"))

```


```{python}
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
data = pd.read_csv("client_a_booze_r_us_transformed.csv")
data['date'] = pd.to_datetime(data['date'], errors='coerce')
data['date'] = data['date'].dt.strftime('%Y-%m')
grouped_data = data.groupby(['name', 'date']).agg(
    sum_sale_dollars = ('sale_dollars', 'sum'),
    avg_sale_dollars = ('sale_dollars', 'mean'),
    bottles_sold = ('sale_bottles', 'sum'),
    num_transactions = ('name', 'count'),
    num_stores = ('store', 'nunique')
)
print(grouped_data)

# Plot Number of Stores vs Total Sales
slope, intercept = np.polyfit(grouped_data['num_stores'], grouped_data['sum_sale_dollars'], 1)
line_of_best_fit = slope * grouped_data['num_stores'] + intercept

plt.scatter(grouped_data['num_stores'], grouped_data['sum_sale_dollars'])
plt.plot(grouped_data['num_stores'], line_of_best_fit, color='red', label='Line of Best Fit')
plt.ylabel("Total Sale Dollars (100,000 $ Scale)")
plt.xlabel("Number of Stores")
plt.title("Number of Stores Compared to Total Sales")
plt.show()


grouped_data_graphing = grouped_data.reset_index()

# Plot total sale dollars over time
plot_data = grouped_data_graphing.groupby('date')['sum_sale_dollars'].sum().reset_index()
plt.bar(plot_data['date'], plot_data['sum_sale_dollars'])
plt.ylabel("Total Sale Dollars (1 Million $ Scale)")
plt.xlabel("Date (Month)")
plt.title("Customer Spending Trend Over Time")
plt.xticks(rotation=45)
plt.show()


plot_data['date'] = pd.to_datetime(plot_data['date'], errors='coerce')
plot_data['year'] = plot_data['date'].dt.year
plot_data['month'] = plot_data['date'].dt.strftime('%b')

for yr in sorted(plot_data['year'].unique()):
    yearly_data = plot_data[plot_data['year'] == yr]
    plt.bar(yearly_data['month'], yearly_data['sum_sale_dollars'])
    plt.ylabel("Total Sale Dollars (1 Million $ Scale)")
    plt.xlabel("Month")
    plt.title(f"Customer Spending Trend in {yr}")
    plt.xticks(rotation=45)
    plt.show()


```

```{python}
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
data = pd.read_csv("client_b_dead_transformed.csv")
pop_data = pd.read_csv('Population_in_Iowa_Transformed.csv')

data['county'] = data['county'].astype(str).str.strip().str.lower()
pop_data['County'] = pop_data['County'].astype(str).str.strip().str.lower()


data['date'] = pd.to_datetime(data['date'], errors='coerce')
data['date'] = data['date'].dt.strftime('%Y').astype(int)

combined_data =  pd.merge(data, pop_data, left_on = (['county', 'date']), right_on= (['County', 'Year']))
grouped_data = combined_data.groupby(['county', 'date','alcohol_type']).agg(
    sum_sale_dollars = ('sale_dollars', 'sum'),
    avg_sale_dollars = ('sale_dollars', 'mean'),
)
print(grouped_data)


grouped_data_graphing = grouped_data.reset_index()
plot_data = grouped_data_graphing.groupby('alcohol_type')['sum_sale_dollars'].sum().reset_index().sort_values(by='sum_sale_dollars')
plt.bar(plot_data['alcohol_type'], plot_data['sum_sale_dollars'])
plt.ylabel("Total Sale Dollars (10 Million $ Scale)")
plt.xlabel("Alcohol Type")
plt.title("Total Sales by Alcohol Type")
plt.xticks(rotation = 45)
plt.show()


plot_data_2 = grouped_data_graphing.groupby('county')['sum_sale_dollars'].sum().reset_index().sort_values(by='sum_sale_dollars')
plt.bar(plot_data_2['county'], plot_data_2['sum_sale_dollars'])
plt.ylabel("Total Sale Dollars (10 Million $ Scale)")
plt.xlabel("County")
plt.title("County Spending")
plt.xticks(rotation=90)
plt.show()

# PLot only the 25 highest Counties
plt.bar(plot_data_2['county'].tail(25), plot_data_2['sum_sale_dollars'].tail(25))
plt.ylabel("Total Sale Dollars (10 Million $ Scale)")
plt.xlabel("County")
plt.title("County Spending (Top 25 Counties)")
plt.xticks(rotation=90)
plt.show()
```


## Clean

## Visualization

